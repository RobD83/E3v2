[mcu eddy]
# FOR USB: replace this with your serial port ID
# FOR CANBUS: replace this with your canbus UUID
serial: /dev/serial/by-id/usb-Klipper_rp2040_455035712913A0F8-if00
restart_method: command

[probe_eddy_ng btt_eddy]
sensor_type: btt_eddy
i2c_mcu: eddy
i2c_bus: i2c0f
x_offset: 49
y_offset: 0


[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

[temperature_sensor btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26



[bed_mesh]
horizontal_move_z: 2
speed: 200
mesh_min: 100, 15  # modify these according to the below guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 173, 220 # modify these according to the below guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 25, 25
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0
adaptive_margin: 5
#scan_overshoot: 8  # uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.
# Uncomment this if you are using Eddy as the probe AND the homing endstop


#[safe_z_home]
#home_xy_position: 115, 115 # Choose an X,Y position that is in the center of your bed. For a 300x300 machine that will be 150, 150. Use the same principle to calculate your bed center.
#z_hop: 10
#z_hop_speed: 25
#speed: 150

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
